{"version":3,"sources":["avatar.png","redux/actions.js","constants/baseUrl.js","components/Header.js","components/Home.js","components/UI/FormField.js","components/Login.js","components/Registration.js","components/Account.js","components/Topics.js","components/Projects.js","components/HOC/PrivateRoute.js","App.js","index.js","redux/reducers.js"],"names":["module","exports","dataIsLoading","bool","type","isLoading","projectsFetchData","url","dispatch","fetch","headers","localStorage","getItem","then","response","json","projects","projectsFetchDataSuccess","BASE_URL","Header","state","isModalOpen","avatar","JSON","parse","avatarUrl","toggleModal","setState","logout","props","history","push","className","to","onClick","this","src","avatarPlaceholder","React","Component","connect","user","userLogin","method","withRouter","teamsUrl","Home","teams","id","name","topic","project","members","firstName","lastName","fetchTeams","console","log","map","team","index","key","member","teamsFetchDataSuccess","FormField","value","error","onChange","e","target","validate","renderInput","placeholder","label","onGenderSelect","checked","isSelected","update","loginUrl","Login","fields","email","password","rememberMe","fieldErrors","onLoginSubmit","preventDefault","validData","stringify","body","res","onInputChange","errMessages","Object","keys","filter","k","length","onSubmit","val","isEmail","disabled","userLoginSuccess","registerUrl","Registration","birthDate","sex","selected","options","jsExperience","reactExperience","companyId","onFormSubmit","persist","prevState","item","updateUrl","Account","submitChanges","property","updateAccount","setItem","date","data","updateAccountSuccess","topicsUrl","Topics","addTopic","title","fetchTopics","onTopicChange","onLike","button","innerText","likeTopic","topics","votedByMe","deleteTopic","canDelete","topicsFetchData","topicDeleteSuccess","topicDelete","text","likeTopicSuccess","projectsUrl","Projects","upvote","upvoteDiv","voteProject","forceUpdate","fetchProjects","description","votingsCount","voteProjectSuccess","PrivateRoute","component","rest","render","createElement","pathname","App","fetchCompanies","hasError","exact","path","companies","dataHaveError","status","Error","statusText","companiesFetchDataSuccess","catch","companiesFetchData","rootReducer","combineReducers","action","token","removeItem","enhancer","applyMiddleware","thunk","store","createStore","composeWithDevTools","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a91a5ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.27b9408d.png\";","// --------------------Companies actions---------------//\n\nexport function dataHaveError(bool) {\n    return {\n        type: 'DATA_HAVE_ERROR',\n        hasError: bool\n    };\n}\n\nexport function dataIsLoading(bool) {\n    return {\n        type: 'DATA_IS_LOADING',\n        isLoading: bool\n    };\n}\n\nexport function companiesFetchDataSuccess(companies) {\n    return {\n        type: 'COMPANIES_FETCH_DATA_SUCCESS',\n        companies\n    };\n}\n\nexport function companiesFetchData(url) {\n    return (dispatch) => {\n        dispatch(dataIsLoading(true));\n\n        fetch(url)\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw Error(response.statusText);\n                }\n                \n                dispatch(dataIsLoading(false));\n                return response;\n            })\n            .then(response => response.json())\n            .then((json) => dispatch(companiesFetchDataSuccess(json)))\n            .catch(() => dispatch(dataHaveError(true)));\n    };\n}\n\n//------------------------------Login actions----------------------//\n\nexport function userLoginSuccess(user) {\n    return {\n        type: 'USER_LOGIN_SUCCESS',\n        user\n    }\n}\n\nexport function userLogoutSuccess() {\n    return {\n        type: 'USER_LOGOUT'\n    }\n}\n\nexport function userLogout(url) {\n    return dispatch => {\n        \n        fetch(url, {\n            headers: {\n                'token': localStorage.getItem('userToken'),\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        })\n\n        dispatch(userLogoutSuccess());\n    }\n}\n\n//----------------------------Topics--------------------------//\n\nexport function topicsFetchDataSuccess(topics) {\n    return {\n        type: 'TOPICS_FETCH_DATA_SUCCESS',\n        topics\n    }\n}\n\nexport function topicsFetchData(url) {\n    return dispatch => {\n\n        fetch(url, {\n            headers: {\n                'token': localStorage.getItem('userToken')\n            }\n        })\n            .then((response) => {\n                return response;\n            })\n            .then(response => response.json())\n            .then((json) => dispatch(topicsFetchDataSuccess(json)))\n    };\n}\n\nexport function topicDeleteSuccess(topics, id) {\n    return {\n        type: 'TOPIC_DELETE',\n        topics,\n        id\n    }\n}\n\nexport function topicDelete(url, topics, id) {\n    return dispatch => {\n\n        fetch(`${url}/${id}`, {\n            headers: {\n                'token': localStorage.getItem('userToken')\n            },\n            method: 'DELETE'\n        })\n        \n        dispatch(topicDeleteSuccess(topics, id));\n    }\n}\n\nexport function likeTopicSuccess(text) {\n    return {\n        type: 'LIKE_TOPIC',\n        text\n    }\n}\n\nexport function likeTopic(url, id, text) {\n    return dispatch => {\n        const validData = JSON.stringify({type: text});\n        console.log(validData);\n        fetch(`${url}/${id}/voting`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'token': localStorage.getItem('userToken')\n            },\n            method: 'POST',\n            body: validData\n        })\n\n        dispatch(likeTopicSuccess(text));\n    }\n}\n\n//----------------------------Projects------------------------//\n\nexport function projectsFetchDataSuccess(projects) {\n    return {\n        type: 'PROJECTS_FETCH_DATA_SUCCESS',\n        projects\n    }\n}\n\nexport function projectsFetchData(url) {\n    return dispatch => {\n\n        fetch(url, {\n            headers: {\n                'token': localStorage.getItem('userToken')\n            }\n        })\n            .then((response) => {\n                return response;\n            })\n            .then(response => response.json())\n            .then((json) => dispatch(projectsFetchDataSuccess(json)))\n    };\n}\n\nexport function voteProjectSuccess(text) {\n    return {\n        type: 'VOTE_PROJECT',\n        text\n    }\n}\n\nexport function voteProject(url, id, text) {\n    return dispatch => {\n        const validData = JSON.stringify({ type: text });\n\n        fetch(`${url}/${id}/voting`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'token': localStorage.getItem('userToken')\n            },\n            method: 'POST',\n            body: validData\n        })\n            .then(() => dispatch(voteProjectSuccess(text)))\n            .then(() => dispatch(projectsFetchData(url)))\n    }\n}\n\n//----------------------------------Account update-------------------------------//\n\nexport function updateAccountSuccess(data) {\n    return {\n        type: 'UPDATE_ACCOUNT',\n        data,\n    }\n}\n\nexport function updateAccount(url, data) {\n    return dispatch => {\n        const validData = JSON.stringify(data);\n        console.log(validData);\n        fetch(url, {\n            headers: {\n                'Content-Type': 'application/json',\n                'token': localStorage.getItem('userToken')\n            },\n            method: 'PUT',\n            body: validData\n        })\n            .then(() => dispatch(updateAccountSuccess(data)))\n    }\n}\n\n//---------------------------------Teams--------------------------------//\n\nexport function teamsFetchDataSuccess(teams) {\n    return {\n        type: 'TEAMS_FETCH_DATA_SUCCESS',\n        teams\n    }\n}\n\nexport function teamsFetchData(url) {\n    return dispatch => {\n\n        fetch(url, {\n            headers: {\n                'token': localStorage.getItem('userToken')\n            }\n        })\n            .then((response) => {\n                return response;\n            })\n            .then(response => response.json())\n            .then(json => dispatch(teamsFetchDataSuccess(json)))\n    };\n}","export const BASE_URL = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1/';\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport avatarPlaceholder from '../avatar.png';\nimport { userLogout } from '../redux/actions';\n\nimport { BASE_URL } from '../constants/baseUrl';\n\nclass Header extends React.Component{\n    state = {\n        isModalOpen: false,\n        avatar: JSON.parse(localStorage.getItem('user')).avatarUrl\n    }\n\n    toggleModal = () => {\n        this.setState({isModalOpen: !this.state.isModalOpen})\n    }\n\n    logout = () => {\n        this.props.logout();\n        return this.props.history.push('/login');\n    }\n\n    render() {\n        return(\n            <div className='HeaderWrapper'>\n                <header>\n                    <div className=\"HeaderLinksContainer\">\n                        <Link className='HeaderLinks' to='/team-builder/'>Home</Link>\n                        <Link className='HeaderLinks' to='/topics'>Topics</Link>\n                        <Link className='HeaderLinks' to='/projects'>Projects</Link>\n                    </div>\n                    <div className='LogoutButtonContainer FlexCenter'>\n                        <button onClick={this.logout} className='LogoutButton' to='/login'>Logout</button>\n                    </div>\n                    <div className='AvatarHeaderContainer FlexCenter'>\n                        <Link to='/account'>\n                            <img className='AvatarHeader' src={this.state.avatar || avatarPlaceholder} />\n                        </Link>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.userLogin,\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(userLogout(`${BASE_URL}users/logout`))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport { teamsFetchData } from '../redux/actions';\n\nimport { BASE_URL } from '../constants/baseUrl';\nimport avatarPlaceholder from '../avatar.png';\n\nconst teamsUrl = `${BASE_URL}teams`;\n\nclass Home extends React.Component {\n    state = {\n        teams: [\n            {\n                id: 1,\n                name: 'Editor',\n                topic: \"Hooks\",\n                project: \"Canvas\",\n                members: [\n                    {\n                        firstName: \"Name\",\n                        lastName: \"Lname\",\n                        avatarUrl: \"\"\n                    },\n                    {\n                        firstName: \"Name\",\n                        lastName: \"Lname\",\n                        avatarUrl: \"\"\n                    },\n                    {\n                        firstName: \"Name\",\n                        lastName: \"Lname\",\n                        avatarUrl: \"\"\n                    },\n                    {\n                        firstName: \"Name\",\n                        lastName: \"Lname\",\n                        avatarUrl: \"\"\n                    },\n                ]\n            },\n        ]\n    }\n\n    componentDidMount() {\n        this.props.fetchTeams(teamsUrl);\n    }\n\n    render() {\n        console.log(this.props.teams);\n        return(\n            <div>\n                <Header />\n                <div className=\"TeamsContainer\">\n                    {/* Change state to props when endpoint will be ready */}\n                    {this.state.teams.map((team, index) => (\n                        <div key={index} className=\"TeamContainer\">\n                            <span className=\"TeamName\">{team.name}</span>\n                            <span className=\"TeamTopic\"> Topic: {team.topic}</span>\n                            <span className=\"TeamProject\">Project: {team.project}</span>\n                            <div className=\"MembersContainer\">\n                                {team.members.map((member, index) => (\n                                    <div key={index} className=\"MemberContainer\">\n                                        <img src={member.avatarUrl || avatarPlaceholder} className=\"TeamMemberAvatar\" />\n                                        <span className=\"TeamMemberNameContainer\">{member.firstName} {member.lastName}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    teams: state.teams\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTeams: teamsUrl => dispatch(teamsFetchData(teamsUrl))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\n\nclass FormField extends React.Component {\n    state = {\n        value: this.props.value,\n        error: false,\n    };\n\n    componentWillReceiveProps(update) {\n        this.setState({ value: update.value });\n    }\n\n    onChange = (e) => {\n        const name = this.props.name;\n        const value = e.target.value;\n        const error = this.props.validate ? this.props.validate(value) : false;\n\n        this.setState({ value, error });\n\n        this.props.onChange({ name, value, error });\n    }\n\n    renderInput = () => {\n        switch (this.props.type) {\n            case 'password':\n                return (\n                    <div>\n                        <input\n                            placeholder={this.props.placeholder}\n                            value={this.state.value}\n                            onChange={this.onChange}\n                            type='password'\n                        />\n                        <div className='ErrorMessageContainer'>\n                            <span className='ErrorMessage'>{this.state.error}</span>\n                        </div>\n                    </div>\n                )\n            case 'checkbox':\n                return (\n                    <div className='CheckboxWrapper'>\n                        <input\n                            value={this.state.value}\n                            onChange={this.onChange}\n                            type='checkbox'\n                        />\n                        <label>{this.props.label}</label>\n                    </div>\n                )\n            case 'radio':\n                return (\n                    <div>\n                        <input\n                            name={this.props.name}\n                            value={this.state.value}\n                            onChange={e => this.props.onGenderSelect(e)}\n                            type='radio'\n                            checked={this.props.isSelected}\n                        />\n                        <label>{this.props.label}</label>\n                    </div>\n                )\n            case 'date': \n                return (\n                    <div>\n                        <input\n                            type='date'\n                            placeholder={this.props.placeholder}\n                            value={this.state.value}\n                            onChange={this.onChange}\n                        />\n                        <div className='ErrorMessageContainer'>\n                            <span className='ErrorMessage'>{this.state.error}</span>\n                        </div>\n                    </div>\n                )\n            case 'number':\n                return (\n                    <div>\n                        <input\n                            type='number'\n                            placeholder={this.props.placeholder}\n                            value={this.state.value}\n                            onChange={this.onChange}\n                        />\n                        <div className='ErrorMessageContainer'>\n                            <span className='ErrorMessage'>{this.state.error}</span>\n                        </div>\n                    </div>\n\n                )\n            default:\n                return (\n                    <div>\n                        <input\n                            className='FormTextInput'\n                            placeholder={this.props.placeholder}\n                            value={this.state.value}\n                            onChange={this.onChange}\n                        />\n                        <div className='ErrorMessageContainer'>\n                            <span className='ErrorMessage'>{this.state.error}</span>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        return (\n            <div className='InputContainer'>\n                {this.renderInput()}\n            </div>\n        );\n    }\n}\n\nexport default FormField;\n\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport isEmail from 'validator/lib/isEmail';\n\nimport FormField from './UI/FormField';\n\nimport { BASE_URL } from '../constants/baseUrl';\nimport { userLoginSuccess } from '../redux/actions';\n\nconst loginUrl = `${BASE_URL}users/login`;\n\nclass Login extends React.Component {\n    state = {\n        fields: {\n            email: '',\n            password: '',\n            rememberMe: '',\n        },\n        fieldErrors: {}\n    }\n\n\n\n    onLoginSubmit = e => {\n        e.preventDefault();\n        //If validation is not passed then don't submit\n        if (this.validate()) return;\n\n        const validData = JSON.stringify({\n            email: this.state.fields.email,\n            password: this.state.fields.password\n        });\n        \n        //TODO: remember me section and logic\n        fetch(loginUrl, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: validData\n        })\n        .then(res => res.json())\n        .then(user => this.props.userLogin(user))\n        .then(() => this.props.history.push('/team-builder/'))\n    }\n\n    //Getting the values, and if there's errors\n    //Than that errors we will keep in our state to for further validation\n    onInputChange = ({ name, value, error }) => {\n        const fields = this.state.fields;\n        const fieldErrors = this.state.fieldErrors;\n\n        fields[name] = value;\n        fieldErrors[name] = error;\n\n        this.setState({ fields, fieldErrors });\n    };\n\n\n\n    validate = () => {\n        const { fields, fieldErrors } = this.state;\n        const errMessages = Object.keys(fieldErrors).filter((k) => fieldErrors[k]);\n\n        //If one of our fields is empty\n        if (!fields.email) return true;\n        if (!fields.password) return true;\n\n        //Or we have at least one error then the validation was failed\n        if (errMessages.length) return true;\n\n        return false;\n    };\n\n    render() {\n        return(\n            <div className=\"FlexCenter\">\n                <div className=\"LoginContainer\">\n                    <h3>Login</h3>\n                    <form onSubmit={this.onLoginSubmit}>\n\n                        <FormField\n                            placeholder='Email'\n                            name='email'\n                            value={this.state.fields.email}\n                            onChange={this.onInputChange}\n                            validate={val => (isEmail(val) ? false : 'Invalid Email')} //[TEMP]\n                        />\n\n                        <FormField\n                            placeholder='password'\n                            name='password'\n                            type='password'\n                            value={this.state.fields.password}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : 'Password Required')} //[TEMP]\n                        />\n\n                        <FormField\n                            name='rememberMe'\n                            type='checkbox'\n                            value={this.state.fields.rememberMe}\n                            onChange={this.onInputChange}\n                            label='Remember Me'\n                        />\n\n                        \n                        <input\n                            className='LoginSubmit'\n                            type='submit'\n                            disabled={this.validate()}\n                            value='Submit'\n                        />\n\n                    </form>\n\n                    <span className='NotAMember'>Not a member? <Link to='/registration'>Register</Link></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLogin: user => dispatch(userLoginSuccess(user))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Login));","import React from 'react';\nimport isEmail from 'validator/lib/isEmail';\nimport { withRouter } from 'react-router-dom';\n\nimport FormField from './UI/FormField';\n\nimport { BASE_URL } from '../constants/baseUrl';\n\nconst registerUrl = `${BASE_URL}users/register`;\nclass Registration extends React.Component {\n    state = {\n        fields: {\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            birthDate: '',\n            sex: {\n                selected: 'male',\n                options: ['male', 'female']\n            },\n            avatarUrl: '',\n            jsExperience: 0,\n            reactExperience: 0,\n            companyId: 1,\n        },\n        fieldErrors: {}\n    }\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        //If validation is not passed then don't submit\n        if (this.validate()) return;\n\n        //[TEMP] Just return for now while waiting for further instructions\n        console.log('Validation was passed!');\n\n        const validData = JSON.stringify({\n            ...this.state.fields,\n            jsExperience: +this.state.fields.jsExperience,\n            reactExperience: +this.state.fields.reactExperience,\n            sex: this.state.fields.sex.selected,\n        });\n\n        console.log(typeof this.state.fields.companyId, validData);\n\n        fetch(registerUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: validData\n        })\n        .then((response) => this.props.history.push('/login'))\n    }\n\n    //Getting the values, and if there's errors\n    //Than that errors we will keep in our state to for further validation\n    onInputChange = ({ name, value, error }) => {\n        const fields = this.state.fields;\n        const fieldErrors = this.state.fieldErrors;\n\n        fields[name] = value;\n        fieldErrors[name] = error;\n\n        this.setState({ fields, fieldErrors });\n    };\n\n    onGenderSelect = e => {\n        e.persist();\n\n        this.setState(prevState => ({\n            fields: {\n                ...prevState.fields,\n                sex: {\n                    ...prevState.fields.sex,\n                    selected: e.target.value,\n                }\n            }\n        }))\n    }\n\n    validate = () => {\n        const { fields, fieldErrors } = this.state;\n        const errMessages = Object.keys(fieldErrors).filter((k) => fieldErrors[k]);\n\n        //Specific validaton for each field\n        if (!fields.firstName) return true;\n        if (!fields.lastName) return true;\n        if (!fields.birthDate) return true;\n        if (fields.jsExperience < 0) return true;\n        if (fields.reactExperience < 0) return true;\n        if (fields.companyId < 0) return true; //[TEMP]\n        if (!fields.email) return true;\n        if (!fields.password) return true;\n\n        //If we have at least one error then the validation was failed\n        if (errMessages.length) return true;\n\n        return false;\n    };\n\n    render() {\n        return(\n            <div className=\"FlexCenter\">\n                <div className=\"RegistrationContainer\">\n                    <h3>Registration</h3>\n                    <form onSubmit={this.onFormSubmit}>\n                        <FormField\n                            placeholder='First name'\n                            name='firstName'\n                            value={this.state.fields.firstName}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : 'First Name Required')} //[TEMP]\n                        />\n\n                        <FormField\n                            placeholder='Last name'\n                            name='lastName'\n                            value={this.state.fields.lastName}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : 'Last Name Required')} //[TEMP]\n                        />\n\n                        <FormField\n                            placeholder='Birth Date'\n                            name='birthDate'\n                            type='date'\n                            value={this.state.fields.birthDate}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : 'Birth Date Required')} //[TEMP]\n                        />\n                        \n                        <div className='SexContainer'>\n                            <span>Sex</span>\n                            {\n                                this.state.fields.sex.options.map((item, index) => (\n                                    <FormField\n                                        key={index}\n                                        type='radio'\n                                        name='sex'\n                                        label={item}\n                                        value={item}\n                                        onGenderSelect={this.onGenderSelect}\n                                        isSelected={this.state.fields.sex.selected === item}\n                                    />\n                                ))\n                            }\n                        </div>\n                        \n                        <FormField\n                            placeholder='Avatar URL'\n                            name='avatarUrl'\n                            value={this.state.fields.avatarUrl}\n                            onChange={this.onInputChange}\n                        />\n\n                        <FormField\n                            placeholder='JS Experience'\n                            name='jsExperience'\n                            type='number'\n                            value={this.state.fields.jsExperience}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : \"No negative numbers\")} //[TEMP]\n                        />\n\n                        <FormField\n                            placeholder='React Experience'\n                            name='reactExperience'\n                            type='number'\n                            value={this.state.fields.reactExperience}\n                            onChange={this.onInputChange}\n                        />\n\n                        <FormField\n                            placeholder='company ID'\n                            name='companyId'\n                            type='number'\n                            value={this.state.fields.companyId}\n                            onChange={this.onInputChange}\n                        />\n\n                        <FormField\n                            placeholder='Email'\n                            name='email'\n                            value={this.state.fields.email}\n                            onChange={this.onInputChange}\n                            validate={val => (isEmail(val) ? false : 'Invalid Email')} //[TEMP]\n                        />\n\n                        <FormField\n                            placeholder='password'\n                            name='password'\n                            type='password'\n                            value={this.state.fields.password}\n                            onChange={this.onInputChange}\n                            validate={val => (val ? false : 'Password Required')} //[TEMP]\n                        />\n                        \n                        <span className='AllFieldWarning'>Please fill all fields</span>\n                        <input\n                            className='RegistrationSubmit'\n                            type='submit'\n                            disabled={this.validate()}\n                            value='Submit'\n                        />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Registration);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { BASE_URL } from '../constants/baseUrl';\nimport FormField from './UI/FormField';\nimport Header from '../components/Header';\nimport { updateAccount } from '../redux/actions';\nimport avatarPlaceholder from '../avatar.png';\n\nconst updateUrl = `${BASE_URL}users/update`;\n\nclass Account extends React.Component {\n    state = {\n        user: JSON.parse(localStorage.getItem('user')),\n        fields: {\n            ...JSON.parse(localStorage.getItem('user'))\n        },\n        fieldErrors: {}\n    }\n\n    submitChanges = property => {\n        this.props.updateAccount(updateUrl, {\n            [property]: this.state.fields[property]\n        });\n\n        const validData = JSON.stringify({\n            ...this.state.user,\n            [property]: this.state.fields[property]\n        })\n\n        localStorage.setItem('user', validData);\n    }\n\n    onInputChange = ({ name, value, error }) => {\n        const fields = this.state.fields;\n        const fieldErrors = this.state.fieldErrors;\n\n        fields[name] = value;\n        fieldErrors[name] = error;\n\n        this.setState({ fields, fieldErrors });\n    };\n\n    render() {\n        return(\n            <>\n                <Header/>\n                <div className='AccountContainer'>\n                    <div className='AvatarColumnContainer'>\n                        <img className='AvatarAccount' src={this.state.user.avatarUrl || avatarPlaceholder} />\n                    </div>\n                    <div className='UserInfoColumn'>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>Email: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.email}\n                                        name='email'\n                                        onChange={this.onInputChange}\n                                        type='email'\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('email')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>First Name: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.firstName}\n                                        name='firstName'\n                                        onChange={this.onInputChange}\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('firstName')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>Last Name: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.lastName}\n                                        name='lastName'\n                                        onChange={this.onInputChange}\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('lastName')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>Birth Date: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.date}\n                                        name='date'\n                                        onChange={this.onInputChange}\n                                        type='date'\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('birthDate')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>Avatar URL: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.avatarUrl}\n                                        name='avatarUrl'\n                                        onChange={this.onInputChange}\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('avatarUrl')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>JS Experience: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.jsExperience}\n                                        name='jsExperience'\n                                        onChange={this.onInputChange}\n                                        type='number'\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('jsExperience')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>React Experience: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.reactExperience}\n                                        name='reactExpereince'\n                                        onChange={this.onInputChange}\n                                        type='number'\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('reactExperience')}>Change</button>\n                            </div>\n                        </div>\n\n                        <div className='UserInfoContainer'>\n                            <span className='UserInfoLabel'>Company ID: </span>\n                            <div className=\"UserInfoBtnContainer\">\n                                <div className=\"UserInputContainer\">\n                                    <FormField\n                                        value={this.state.fields.companyId}\n                                        name='companyId'\n                                        onChange={this.onInputChange}\n                                        type='number'\n                                    />\n                                </div>\n                                <button className=\"UserInfoChangeBtn\" onClick={() => this.submitChanges('companyId')}>Change</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateAccount: (updateUrl, data) => dispatch(updateAccount(updateUrl, data))\n})\n\nexport default connect(null, mapDispatchToProps)(Account);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport { topicsFetchData, topicDelete, likeTopic } from '../redux/actions';\nimport { BASE_URL } from '../constants/baseUrl';\n\nconst topicsUrl = `${BASE_URL}topics`;\nclass Topics extends React.Component {\n    state = {\n        topic: '',\n    }\n\n    componentDidMount() {\n        this.props.fetchTopics(topicsUrl)\n    }\n\n    addTopic = () => {\n        const validData = JSON.stringify({title: this.state.topic});\n        this.setState({ topic: '' });\n        fetch(topicsUrl, {\n            headers: {\n                'token': localStorage.getItem('userToken'),\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: validData\n        })\n        .then(() => this.props.fetchTopics(topicsUrl))\n    }\n\n    onTopicChange = e => {\n        this.setState({topic: e.target.value})\n    }\n\n    onLike = (e, topicsUrl, id) => {\n        const button = e.target;\n        if (button.className === \"LikeButton\") {\n            button.className += \" BlueLikeBackground\";\n            button.innerText = \"Liked\";\n\n            this.props.likeTopic(topicsUrl, id, 'like');\n        } else {\n            button.className = \"LikeButton\";\n            button.innerText = \"Like\";\n\n            this.props.likeTopic(topicsUrl, id, 'unlike');\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Header />\n                <div className=\"TopicsContainer\">\n\n                    <div className=\"TopicInputContainer\">\n                        <input className=\"TopicInput\" onChange={e => this.onTopicChange(e)} value={this.state.topic} />\n                        <button className=\"TopicAddButton\" onClick={this.addTopic}>Add Topic</button>\n                    </div>\n\n                    <div className=\"TopicsListContainer\">\n\n                        {this.props.topics.map((topic, index) => (\n                            <div key={index} className='TopicContainer'>\n                                <div className='TopicTitleContainer'>\n                                    <span>{topic.title}</span>\n                                </div>\n\n                                <div className='TopicsButtonsContainer'>\n                                    <button\n                                        onClick={e => this.onLike(e, topicsUrl, topic.id)}\n                                        className={topic.votedByMe ? \"LikeButton BlueLikeBackground\" : \"LikeButton\"}\n                                    >\n                                        {topic.votedByMe ? \"Liked\" : \"Like\"}\n                                    </button>\n                                    <button\n                                        onClick={() => this.props.deleteTopic(topicsUrl, this.props.topics, topic.id)}\n                                        disabled={!topic.canDelete}\n                                        className='DeleteButton'\n                                    >\n                                        Delete\n                                    </button>\n                                </div>\n                                \n                            </div>\n                        ))}\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    topics: state.topics\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopics: url => dispatch(topicsFetchData(url)),\n    deleteTopic: (url, topics, id) => dispatch(topicDelete(url, topics, id)),\n    likeTopic: (topicsUrl, id, text) => dispatch(likeTopic(topicsUrl, id, text))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport { projectsFetchData, voteProject, topicDelete } from '../redux/actions';\n\nimport { BASE_URL } from '../constants/baseUrl';\n\nconst projectsUrl = `${BASE_URL}projects`\n\nclass Projects extends React.Component {\n    componentDidMount() {\n        this.props.fetchProjects(projectsUrl);\n    }\n\n    upvote = (e, projectsUrl, id) => {\n        const upvoteDiv = e.target;\n\n        if (upvoteDiv.className === \"Upvote\") {\n            upvoteDiv.className = \"UpvoteChecked\";\n\n            this.props.voteProject(projectsUrl, id, 'like');\n        } else {\n            upvoteDiv.className = \"Upvote\";\n\n            this.props.voteProject(projectsUrl, id, 'unlike');\n        }\n        \n        this.forceUpdate();\n    }\n\n    render() {\n        return(\n            <div>\n                <Header />\n                <div className=\"ProjectsContainer\">\n                    {this.props.projects.map((project, index) => (\n                        <div key={index} className=\"ProjectContainer\">\n                            <div className=\"ProjectInfoContainer\">\n                                <div className=\"ProjectTitleContainer\">\n                                    <span className=\"ProjectTitle\">{project.title}</span>\n                                </div>\n                                <div className=\"ProjectDescriptionContainer\">\n                                    <span className=\"ProjectDescription\">{project.description}</span>\n                                </div>\n                            </div>\n                            <div className=\"ProjectUpvoteContainer\">\n                                <div className=\"UpvoteContainer\">\n                                    <div \n                                        onClick={e => this.upvote(e, projectsUrl, project.id)} \n                                        className={project.votedByMe ? \"UpvoteChecked\" : \"Upvote\"} \n                                    />\n                                </div>\n                                <div className=\"UpvoteCountContainer\">\n                                    <span className=\"UpvoteCount\">{project.votingsCount}</span>\n                                </div>\n                            </div>\n                        </div>\n                    ))} \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    projects: state.projects\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchProjects: projectsUrl => dispatch(projectsFetchData(projectsUrl)),\n    voteProject: (projectsUrl, id, text) => dispatch(voteProject(projectsUrl, id, text))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        localStorage.getItem('userToken') ? (\n            React.createElement(component, props)\n        ) : (\n                <Redirect to={{\n                    pathname: '/login',\n                }} />\n            )\n    )} />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport Account from './components/Account';\nimport Topics from './components/Topics';\nimport Projects from './components/Projects';\nimport { companiesFetchData } from './redux/actions';\n\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { BASE_URL } from './constants/baseUrl';\n\nclass App extends React.Component{\n  componentDidMount() {\n    this.props.fetchCompanies(`${BASE_URL}companies`);\n  }\n\n  render() {\n    if (this.props.hasError) return <h1>Sorry, something went wrong...</h1>;\n\n    if (this.props.isLoading) return <h1>Loading...</h1>;\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          <PrivateRoute exact path=\"/team-builder/\" component={() => <Home /> } />\n          <Route exact path=\"/login\" render={props => <Login {...props} />} />\n          <Route exact path=\"/registration\" render={props => <Registration {...props} />} />\n          <PrivateRoute exact path=\"/account\" component={() => <Account />} />\n          <PrivateRoute exact path=\"/topics\" component={() => <Topics />}/>\n          <PrivateRoute exact path='/projects' component={() => <Projects />} />\n          <Route render={()=> <h1>Sorry, the page is not found :(</h1>}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  companies: state.companies,\n  hasError: state.dataHaveError,\n  isLoading: state.dataIsLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCompanies: url => dispatch(companiesFetchData(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './App';\nimport { \n  userLogin, \n  companies, \n  topics, \n  likeTopic,\n  projects,\n  voteProject,\n  updateAccount,\n  dataHaveError, \n  dataIsLoading \n} from './redux/reducers';\n\nconst rootReducer = combineReducers({\n  companies,\n  topics,\n  userLogin,\n  likeTopic,\n  projects,\n  voteProject,\n  updateAccount,\n  dataHaveError,\n  dataIsLoading\n})\n\nconst enhancer = applyMiddleware(thunk);\n\nconst store = createStore(rootReducer, {}, composeWithDevTools(enhancer));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n","export function dataHaveError(state = false, action) {\n    switch (action.type) {\n        case 'DATA_HAVE_ERROR':\n            return action.hasError;\n\n        default:\n            return state;\n    }\n}\n\nexport function dataIsLoading(state = false, action) {\n    switch (action.type) {\n        case 'DATA_IS_LOADING':\n            return action.isLoading;\n\n        default:\n            return state;\n    }\n}\n\nexport function companies(state = [], action) {\n    switch (action.type) {\n        case 'COMPANIES_FETCH_DATA_SUCCESS':\n            localStorage.setItem('companies', JSON.stringify(action.companies));\n            \n            return action.companies;\n\n        default:\n            return state;\n    }\n}\n\nexport function userLogin(state = {}, action) {\n    switch (action.type) {\n        case 'USER_LOGIN_SUCCESS':\n            localStorage.setItem('userToken', action.user.token);\n            localStorage.setItem('user', JSON.stringify(action.user));\n            return action.user;\n        case 'USER_LOGOUT':\n            localStorage.removeItem('userToken');\n            localStorage.removeItem('user');\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport function topics(state = [], action) {\n    switch (action.type) {\n        case 'TOPICS_FETCH_DATA_SUCCESS':\n            return action.topics;\n        case 'TOPIC_DELETE':\n            return action.topics.filter(topic => topic.id !== action.id)\n        default:\n            return state;\n    }\n}\n\nexport function likeTopic(state = '', action) {\n    switch (action.type) {\n        case 'LIKE_TOPIC':\n            return action.text\n        default: \n            return state;\n    }\n}\n\nexport function projects(state = [], action) {\n    switch (action.type) {\n        case 'PROJECTS_FETCH_DATA_SUCCESS':\n            return action.projects;\n        default:\n            return state;\n    }\n}\n\nexport function voteProject(state = '', action) {\n    switch (action.type) {\n        case 'VOTE_PROJECT':\n            return action.text\n        default:\n            return state;\n    }\n}\n\nexport function updateAccount(state = {}, action) {\n    switch (action.type) {\n        case 'UPDATE_ACCOUNT':\n            return action.data\n        default: \n            return state;\n    }\n}\n\nexport function teams(state = [], action) {\n    switch (action.type) {\n        case 'TEAMS_FETCH_DATA_SUCCESS':\n            return action.teams;\n        default:\n            return state;\n    }\n}"],"sourceRoot":""}